{"version":3,"file":"static/js/883.cef9c7e9.chunk.js","mappings":"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","sources":["components/RegisterForn/RegisterForm.styled.js","components/RegisterForn/RegisterForm.js","pages/Register.js"],"sourcesContent":["import {\n    Form as FormikForm,\n    Field as FormikField,\n    ErrorMessage as FormikError,\n  } from 'formik';\n  import { NavLink } from 'react-router-dom';\n  import styled from 'styled-components';\n  \n  export const IconWrap = styled.div`\n    width: 60px;\n    height: 60px;\n    background-color: ${p => p.theme.colors.lightblue};\n    border-radius: 50%;\n    margin: 0 auto;\n  \n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n  \n  export const LogTitle = styled.h2`\n    margin: 0 auto;\n    text-align: center;\n  `;\n  \n  export const FormContainer = styled.div`\n    max-width: 600px;\n    padding: 16px 32px;\n    margin: 0 auto;\n  `;\n  \n  export const Form = styled(FormikForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  `;\n  \n  export const Field = styled(FormikField)`\n    padding: ${p => p.theme.spacing(2)};\n    font: inherit;\n    border-radius: ${p => p.theme.radii.sm};\n    border: 1px solid ${p => p.theme.colors.grey};\n    background-color: ${p => p.theme.colors.lightgray};\n  `;\n  \n  export const FormGroup = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  `;\n  \n  export const ErrorMessage = styled(FormikError)`\n    color: ${p => p.theme.colors.red};\n    font-size: 14px;\n  `;\n  \n  export const FormButton = styled.button`\n    display: block;\n    margin: 0 auto;\n    min-width: 100px;\n    color: ${p => p.theme.colors.black};\n    background-color: ${p => p.theme.colors.blue};\n    border-radius: ${p => p.theme.radii.md};\n    border: 1px solid rgba(0, 0, 0, 0.15);\n    padding: ${p => p.theme.spacing(2)};\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    cursor: pointer;\n    font-weight: 500;\n    font-size: 16px;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n    &:hover {\n      background-color: ${p => p.theme.colors.active};\n    }\n  `;\n  \n  export const MainLink = styled(NavLink)`\n    color: ${p => p.theme.colors.blue};\n    font-size: 14px;\n    font-weight: 500;\n  `;","import { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  IconWrap,\n  LogTitle,\n  FormContainer,\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormButton,\n  MainLink,\n} from './RegisterForm.styled';\nimport { CiLock } from 'react-icons/ci';\nimport { selectError } from '../../redux/auth/selectors';\n\nconst registerSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').required('Required'),\n  email: Yup.string().email().required('Required'),\n  password: Yup.string().min(7, 'Too Short!').required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <FormContainer>\n        <IconWrap>\n          <CiLock\n            style={{\n              width: '40px',\n              height: '40px',\n            }}\n          />\n        </IconWrap>\n        <LogTitle>Register</LogTitle>\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={registerSchema}\n          onSubmit={(values, actions) => {\n            dispatch(register(values));\n            actions.resetForm();\n          }}\n        >\n          <Form>\n            <FormGroup>\n              Name\n              <Field type=\"text\" name=\"name\" />\n              <ErrorMessage name=\"name\" component=\"span\" />\n            </FormGroup>\n\n            <FormGroup>\n              Email\n              <Field type=\"email\" name=\"email\" />\n              <ErrorMessage name=\"email\" component=\"span\" />\n            </FormGroup>\n\n            <FormGroup>\n              Password\n              <Field type=\"password\" name=\"password\" />\n              <ErrorMessage name=\"password\" component=\"span\" />\n            </FormGroup>\n\n            <FormButton type=\"submit\">Register</FormButton>\n          </Form>\n        </Formik>\n        <MainLink to=\"/login\">Already have an account? Log in</MainLink>\n      </FormContainer>\n      {error &&\n        toast.error(\n          'Something went wrong! Please check your details and try again.'\n        )}\n    </>\n  );\n};","import { RegisterForm } from '../components/RegisterForn/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["IconWrap","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","lightblue","LogTitle","_templateObject2","FormContainer","_templateObject3","Form","FormikForm","_templateObject4","Field","FormikField","_templateObject5","spacing","radii","sm","grey","lightgray","FormGroup","_templateObject6","ErrorMessage","FormikError","_templateObject7","red","FormButton","_templateObject8","black","blue","md","active","MainLink","NavLink","_templateObject9","registerSchema","Yup","shape","name","min","required","email","password","RegisterForm","dispatch","useDispatch","error","useSelector","selectError","_jsxs","_Fragment","children","_jsx","CiLock","style","width","height","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","type","component","to","toast","Register"],"sourceRoot":""}